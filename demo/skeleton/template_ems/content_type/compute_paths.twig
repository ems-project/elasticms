{%  block ems_post_processing %}
{%- apply spaceless %}
    {% if finalize %}
        {% set paths = {} %}
        {% set config = 'config'|i18n('en')|json_decode %}
        {% set locales = config.locales|default([]) %}
        {% set baseUrl = {} %}
        {% for locale in locales %}
            {% set baseUrl = baseUrl|merge({(locale): ''}) %}
        {%  endfor %}
        {% set structure = _source.structure|default('{}')|ems_json_menu_nested_decode %}
        {% set homeAttached = false %}
        {% for item in structure %}
            {% set path = [] %}
            {% for p in item.path %}
                {% for locale in locales %}
                    {%- set path = path|merge({(locale): attribute(path, locale)|default([])|merge([attribute(p.object, locale).title|default(null)])}) -%}
                {% endfor %}
            {% endfor %}

            {% for locale in locales|filter(locale => attribute(path, locale)|length > 0 and null not in attribute(path, locale)) %}
                {% if homeAttached == false and _source.is_main|default(false) == true and attribute(item.object, locale).title|default|slug != 'home' %}
                    {% set paths = paths|merge([{
                        'uid': (item.id),
                        'path' : "home",
                        'locale' : locale,
                    }]) %}
                {% endif %}

                {% set paths = paths|merge([{
                    'uid': (item.id),
                    'path' : attribute(baseUrl, locale) ~ (attribute(path, locale)|map(p => p|slug)|join('/')|default('/')),
                    'locale' : locale,
                }]) %}
            {% endfor %}
            {% set homeAttached = true %}
        {% endfor %}
        {{ paths|default([])|json_encode|raw }}
    {% endif %}
{% endapply -%}
{% endblock %}

{%  block ems_value %}
    {%- if _source.paths|default(false) -%}
        {{- _source.paths|json_encode|raw -}}
    {%- endif -%}
{% endblock %}

{%  block ems_display %}
    {% set config = 'config'|i18n('en')|json_decode %}
    {% set locales = config.locales|default([]) %}
    <ul>
        {% for locale in locales %}
            {% if data|default([])|filter(item => locale == item.locale)|length > 0 %}
                <li> {{ ('locale.'~locale)|i18n }}:
                    <ul>
                        {% for item in data|filter(item => locale == item.locale) %}
                            <li>
                                {{ item.path }}
                            </li>
                        {% endfor %}
                    </ul>
                </li>
            {% endif %}
        {% endfor %}
    </ul>
{% endblock %}
