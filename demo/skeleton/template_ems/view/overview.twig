{% block template %}
    {% set columns = [] %}
    {% if contentType.name == 'label' %}
        {%- set languages = {'nl': 'Dutch', 'fr': 'French'} -%}
        {%- set selectedLanguages = app.request.query.get('l', ['nl', 'fr']) -%}
        {% set columnKey %}{% verbatim %}<a href="{{ path('data.revisions', {ouuid: data.id, type: data.contentType} ) }}">{{ data.source.key }}</a>{% endverbatim %}{% endset %}
        {% set columns = [
            { "label": "Key", "template": columnKey|format,  "orderField": "key"}
        ] %}

        {% for l, lang in languages|filter((v, k) => k in selectedLanguages) %}
            {% set columns = columns|merge([
                {
                    "label": (lang),
                    "template": "<span class="~'"'~"{% if data.source.label_#{l} is not defined %}text-gray{% endif %}"~'"'~">{{ data.source.label_#{l}|default('N/A') }}</span>",
                    "orderField": "label_#{l}.alpha_order"
                }
            ]) %}
        {% endfor %}
    {% elseif contentType.name == 'route' %}
        {% set columnName %}{% verbatim %}<a href="{{ path('data.revisions', {ouuid: data.id, type: data.contentType} ) }}">{{ data.source.name }}</a>{% endverbatim %}{% endset %}
        {% set columns = [
            {
                "label": "#",
                "template": "{{ data.source.order|default(999) }}",
                "orderField": "order"
            },
            { "label": "Name", "template": columnName|format,  "orderField": "name"},
            {
                "label": "Path",
                "template": "
                {% set path = attribute(data.source.config|default({})|ems_json_decode, 'path')|default('N/A') %}
                    {% if path is iterable %}
                        <ul>
                            {% for l, item in path %}
                                <li>{{ l }} : {{ item }}</li>
                            {% endfor %}
                        </ul>
                    {% else %}
                        <span class="~'"'~"{% if attribute(data.source.config|default({})|ems_json_decode, 'path') is not defined %}text-gray{% endif %}"~'"'~">{{ path }}</span>
                    {% endif %}
                "
            } ] %}
    {% elseif contentType.name in ['template', 'template_ems'] %}
        {% set columnName %}{% verbatim %}<a href="{{path('data.revisions', {ouuid: data.id, type: data.contentType} ) }}">{{ data.source.name }}</a>{% endverbatim %}{% endset %}
        {% set columns = [ { "label": "Name", "template": columnName|format,  "orderField": "name"} ] %}
    {% else %}
        {% set columns = columns|merge([
            {
                "label": "EMS label",
                "template": '<a href="' ~ "{{path('data.revisions', {ouuid: data.id, type: data.contentType} ) }}"~'">' ~"{{ data.source.label }}</a>",
                "orderField": "label.alpha_order"
            }
        ]) %}
    {% endif %}

    {% set infoEnv = 'overview.legend'|i18n('en') %}
    <div class="mb-3">
        <h4>Legend for Live</h4>
        {% for info in infoEnv|ems_json_decode %}
            <span class="ml-2"><i style="color: {{ info.color }}" class="{{ info.icon }}"></i>  {{ info.label }}</span>
        {% endfor %}
    </div>

    {% set columnLive %}{% verbatim %}
    <i style="color: {{ docInfo.published('live') and (docInfo.aligned('live') or docInfo.revision('preview').finalizedDate == docInfo.revision('live').finalizedDate) ? infoEnv.published.color : docInfo.published('live') ? infoEnv.warning.color : infoEnv.unpublished.color }}"
    class="{{ docInfo.published('live') and (docInfo.aligned('live') or docInfo.revision('preview').finalizedDate == docInfo.revision('live').finalizedDate) ? infoEnv.published.icon : docInfo.published('live') ? infoEnv.warning.icon : infoEnv.unpublished.icon }}"
    title="{{ docInfo.published('live') and (docInfo.aligned('live') or docInfo.revision('preview').finalizedDate == docInfo.revision('live').finalizedDate) ? infoEnv.published.label : docInfo.published('live') ? infoEnv.warning.label : infoEnv.unpublished.label }}"></i>
{% endverbatim %}{% endset %}

    {% set columns = columns|merge([
        {
            "label": "Last Update",
            "template": '
            <div style="width: 130px;" data-toggle="tooltip" data-placement="top" aria-hidden="true" title="By {{ data.source._finalized_by }}" >
                {{ data.source._finalization_datetime|default ? data.source._finalization_datetime|date("d/m/Y (H:i)") : "N.A." }}
            </div>
        ',
            "orderField": "_finalization_datetime"
        },
        { "label": "Live", "template": columnLive|format },
        {
            "label": "Action",
            "template": '
            <div class="btn-group btn-group-sm" style="width: 130px;">
              <a href="{{ docInfo.draft ? path("ems_revision_edit", {revisionId: revisionId}) : docInfo.aligned("live") ? path("revision.new-draft", {type: data.contentType, ouuid: data.id }) : path("revision.publish_to", {revisionId: revisionId, envId: liveId, redirectToUrl: path("data.customindexview", {viewId: '~view.id~'})}) }}" class="btn btn-default" style="width: 100px;">
                {{ docInfo.draft ? "Edit draft" : docInfo.aligned("live") ? "Edit" : "Publish in live" }}
              </a>
              <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                <span class="caret">
                </span>
                <span class="sr-only">Toggle Dropdown
                </span>
              </button>
              <ul class="dropdown-menu" role="menu">
                <li>
                  <a href="{{ path("data.revisions", {ouuid: data.id, type: data.contentType} ) }}">Revision</a>
                </li>
                {% if docInfo.draft %}
                    <li><a href="{{ path("revision.publish_to", {revisionId: revisionId, envId: previewId}) }}">Publish in preview</a></li>
                {% elseif not docInfo.aligned(\'live\') %}
                    <li><a href="{{ path("revision.new-draft", {type: data.contentType, ouuid: data.id }) }}">Edit</a></li>
                {% endif %}
              </ul>
            </div>
        '
        }
    ]) %}

    {% set must = {} %}
    {% set filterQuery = [ {
        "multi_match": {
            "fields": [
                "live_search",
                "live_search._2gram",
                "live_search._3gram"
            ],
            "query": "%query%",
            "operator": "and",
            "type": "bool_prefix"

        } } ] %}

    <div id="wrapper-overview">
        <div id="view-loading" style="display: none;"><i class="fa fa-cog fa-spin fa-3x fa-fw"></i></div>
        {% if filters is defined %}
            {% with { 'filters' : filters, 'selections': selections } %}{{ block('filters') }}{% endwith %}
        {% endif %}
        {{ emsco_datatable(['preview'],[contentType.name], {
            "frontendOptions": { "pageLength": 100, "order": [[(columns|length - 4), 'desc']] },
            "default_sort": { "_finalization_datetime": "desc", "_score": "asc" },
            "empty_query": must,
            "query": { "bool": { "must": must|merge(filterQuery) } },
            "row_context": "{% set docInfo = [line.data.contentType, line.data.id]|join(':')|emsco_document_info %}{% set revisionId = line.data.id|get_revision_id(line.data.contentType) %}{% set liveId = 'live'|get_environment.id %}{% set previewId = 'preview'|get_environment.id %} {% set infoEnv = #{infoEnv} %}",
            "columns": columns
        }) }}
    </div>
{% endblock %}

{% block css %}
    <style type="text/css">
        div#wrapper-overview { position: relative; }
        div#view-loading {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            height: 100%;
            position: absolute;
            background-color: rgba(9,9,9,.1);
            z-index: 1000;
            font-size: 1em;
        }
    </style>
{% endblock %}

{% block javascript %}
    <script type="text/javascript">
        window.addEventListener('emsReady', function () {
            let filterForm = document.getElementById('form-filters');
            if (filterForm) {
                filterForm.addEventListener('change', function () { filterForm.submit(); });
            }

            $('#DataTables_Table_0').on( 'draw.dt', function () {
                $('[data-toggle="tooltip"]').tooltip();
            });
        });

        document.body.addEventListener('click', function (evt) {
            let target = evt.target;
            if (target.classList.contains('duplicate')) {
                document.getElementById("view-loading").style.display = "flex";
                let f=document.createElement('form');
                f.style.display='none';
                document.body.appendChild(f);
                f.method='post';
                f.action=target.dataset.url;
                f.submit();
            }
        });
    </script>
{% endblock %}
