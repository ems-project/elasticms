{% block http_admin_api_form_endpoint %}
    {% apply spaceless %}
        {% set url = app.request.getSchemeAndHttpHost() %}
        {% set token = app.request.server.all['EMSF_AUTHKEY'] %}
        {% set config = {
            "method": "POST",
            "url": ("#{url}/api/forms/submissions"),
            "headers": {
                "Content-Type": "application/json",
                "X-Auth-Token": ("#{token}")
            },
            "timeout": 30
        } %}
    {% endapply %}
    {{- config|json_encode|raw -}}
{% endblock http_admin_api_form_endpoint %}

{% block http_admin_api_form_request_body %}
    {% apply spaceless %}
        {% set files = formData.allFiles|default([])|map(v => v.toArray|merge({ 'base64': v.base64() }) )|map(f => {
            'filename': ('attachment '~f.filename)|ems_webalize,
            'mimeType': f.mimeType,
            'size': f.size,
            'form_field': f.form_field,
            'base64': f.base64
        })|filter(v => v.size > 0) %}

        {% set message = {
            'form_name': config.name,
            'instance': config.translationDomain,
            'locale': config.locale,
            'data': formData.raw,
            'files': files,
            'label': "Example files",
            'expire_date': '+1 month'|date('Y-m-d')
        } %}
    {% endapply %}
    {{- message|json_encode|raw -}}
{% endblock http_admin_api_form_request_body %}

{% block http_admin_api_form_handle_response_extra %}
    {%- set extra = {
        'uid': (response.getHttpResponseContentJSON.submission_id)
    } -%}
    {{- extra|json_encode|raw -}}
{% endblock http_admin_api_form_handle_response_extra %}

{% block email_endpoint %}
{{- "no-reply@elasticms.be" -}}
{% endblock email_endpoint %}

{% block email_message %}
    {% apply spaceless %}
        {% set fields = [] %}
        {% set elements = config.elements %}

        {% for name, value in formData.raw %}
            {% set element = elements|filter(v => v.name == name)|first %}
            {% if element.name != 'files' %}
                {% set fields = fields|merge({ (element.label): value }) %}
            {% endif %}
        {% endfor %}

        {% set files = formData.allFiles|map(v => v.toArray) %}

        {% set body %}
        <body>
            <ul>
                {% for label, value in fields %}
                    <li>{{ label }}: {{ value }}</li>
                {% endfor %}
            </ul>
            {% if files|length > 0 %}
                <p>Files:</p>
                <ul>
                    {% for file in files %}
                        <li>{{ file.originalName }}</li>
                    {% endfor %}
                </ul>
            {% endif %}
            <p>
                Kind regards.
            </p>
        </body>
        {% endset %}

        {% set mail = {
            "from": "no-reply@elasticms.be",
            "subject": "Form example files",
            "body": body,
            "attachments": files|map(f => {
                filename: f.originalName|ems_webalize,
                mimeType: f.mimeType,
                pathname: f.pathname,
            })
        } %}
    {% endapply %}
    {{- mail|json_encode|raw -}}
{% endblock email_message %}
