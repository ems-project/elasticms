{
    "body": "{%  block ems_body %}\n    {% set form = emsco_form('dashboard_sitemap_options', { locale: app.user.localePreferred|default('nl') }, {\n        method: 'GET',\n    }) %}\n    {% set formView = form.createView %}\n\n    <div class=\"box with-border\">\n        <div class=\"box-header with-border\">\n            <h2 class=\"box-title\">Options</h2>\n        </div>\n        <div class=\"box-body\">\n            {{ form_start(formView) }}\n            {{ form_row(attribute(formView, 'dashboard_sitemap_options'), {class: 'col-md-4'}) }}\n            <div class=\"clearfix\"></div>\n            <div class=\"col-md-12\">\n                <button type=\"submit\" class=\"btn btn-primary\"><i class=\"fa fa-eye\"></i> Apply</button>\n            </div>\n            {{ form_end(formView) }}\n        </div>\n    </div>\n\n    {% if not form.submitted or form.valid %}\n        {% set sections = {\n            index: 'preview'|get_environment.alias,\n            body: {\n                query: {\n                    terms: {\n                        _contenttype: ['section'],\n                    },\n                },\n            },\n            _source: ['label', 'menu', 'structure'],\n            size: 100,\n            sort: [{\n                \"label.alpha_order\": {\n                    \"order\": \"desc\",\n                    \"missing\": \"_last\"\n                }\n            }],\n        }|search.hits.hits|default([])|array_key('_id') %}\n\n        {% set pages = {\n            index: 'preview'|get_environment.alias,\n            body: {\n                query: {\n                    terms: {\n                        _contenttype: ['page','section'],\n                    },\n                },\n            },\n            _source: ['label', 'menu'],\n            size: 10000,\n        }|search.hits.hits|default([])|filter(p => p._source.menu|default(false))|map(p => {\n            id: p._id,\n            contenttype: p._source._contenttype,\n            label: p._source.label,\n            menu: p._source.menu,\n        })|array_key('menu') %}\n\n        {% set locale = form.data.dashboard_sitemap_options.locale %}\n\n        {% for section in sections|filter(p => p._source.menu is not defined) %}\n            {% set structure = section._source.structure|default('[]')|ems_json_menu_nested_decode %}\n            {% for item in structure|filter(p => p.type == 'section') %}\n                {% if sections|filter(p => p._source.menu|default(null) == item.id)|default([])|length > 0 %}\n                    {% do item.setChildren(sections|filter(p => p._source.menu|default(null) == item.id)|first._source.structure|ems_json_menu_nested_decode.children) %}\n                {% endif %}\n            {% endfor %}\n\n            {% for item in structure %}\n                {% do item.setLabel(attribute(item.object, locale).title|default('')) %}\n            {% endfor %}\n\n            <div class=\"box with-border\">\n                <div class=\"box-header with-border\">\n                    <h2 class=\"box-title\">{{ section._source.label }}</h2>\n                    <div class=\"btn-group pull-right\">\n                        {% with {item: {\n                            id: section._id,\n                            object: section._source,\n                            label: section._source.label,\n                            type: section._source._contenttype,\n                            page: {\n                                contenttype: section._source._contenttype,\n                                id: section._id,\n                                label: section._source.label,\n                            }\n                        } } %}\n                            {{ include(template_from_string(block('actions'))) }}\n                        {% endwith %}\n                    </div>\n                </div>\n                <div class=\"box-body\">\n                    {{ emsco_json_menu_nested({\n                        id: section._id,\n                        document: section,\n                        context: {\n                            pages: pages,\n                            sections: sections,\n                        },\n                        field: 'structure',\n                        structure: (structure.toArrayStructure(true)|json_encode),\n                        actions: {\n                            add: { deny: ['all'] },\n                            edit: { deny: ['all'] },\n                            delete: { deny: ['all'] },\n                            move: { deny: ['all'] },\n                            copy: { deny: ['all'] },\n                            paste: { deny: ['all'] },\n                            preview: { deny: ['all'] },\n                        },\n                        blocks: [{\n                            type: 'item_action',\n                            item_type: 'page',\n                            html: (block('actions')),\n                        },{\n                            type: 'item_action',\n                            item_type: 'section',\n                            html: (block('actions')),\n                        }]\n                    }) }}\n                </div>\n            </div>\n        {% endfor %}\n    {% endif %}\n{%  endblock ems_body %}\n\n{%  block actions %}\n     {% verbatim %}\n\n        {% set templatesByType = {\n            page: [{\n                label: \"Create page\",\n                value: item.object|merge({\n                    label: item.label,\n                    menu : item.id,\n                }),\n            }],\n            section: [{\n                label: \"Create section\",\n                value: item.object|merge({\n                    label: item.label,\n                    menu : item.id,\n                }),\n            }]\n        } %}\n        {% set page = item.page|default(attribute(pages, item.id)|default(false)) %}\n        {% if page %}\n            {% set info = \"#{page.contenttype}:#{page.id}\"|emsco_document_info %}\n\n            <div class=\"btn-group\">\n                <button class=\"btn btn-default btn-sm\">\n                    {% for environment in ['live'] %}\n                        {% if info.isAligned(environment) %}\n                            <i class=\"text-success fa fa-check\" title=\"Last version published in {{ environment }}\"></i>\n                        {% elseif info.isPublished(environment) %}\n                            <i class=\"text-warning fa fa-warning\" title=\"A version is published in {{ environment }} but not the last\"></i>\n                        {% else %}\n                            <i class=\"text-danger fa fa-times\" title=\"Missing in {{ environment }}\"></i>\n                        {% endif %}\n                    {% endfor %}\n                </button>\n            </div>\n\n            {% for environment in ['live'] %}\n                {% if info.hasDraft() or info.isAligned(environment) %}\n                    <a href=\"{{ path('emsco_data_new_draft', { type: page.contenttype, ouuid: page.id }) }}\" class=\"btn btn-sm btn-default\">\n                        Edit {{ page.label }}\n                    </a>\n                {% else %}\n                    <a href=\"{{ path(\"revision.publish_to\", {revisionId: info.getRevision('preview').id, envId: environment|get_environment.id, redirectToUrl: app.request.requesturi }) }}\" class=\"btn btn-sm btn-default\">\n                        Publish {{ page.label }} in {{ environment }}\n                    </a>\n                {% endif %}\n                <div class=\"btn-group\">\n                    <button type=\"button\" class=\"btn btn-default btn-sm dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n                        <span class=\"caret\"></span>\n                    </button>\n                    <ul class=\"dropdown-menu\" role=\"menu\">\n                        <li>\n                            <a href=\"{{ path('emsco_data_new_draft', { type: page.contenttype, ouuid: page.id }) }}\">\n                                Edit\n                            </a>\n                            <a href=\"{{ path('data.revisions', {ouuid: page.id, type: page.contenttype} ) }}\">\n                                Revision\n                            </a>\n                            {% if not info.isAligned(environment) and  not info.hasDraft() %}\n                                <a href=\"{{ path(\"revision.publish_to\", {revisionId: info.getRevision('preview').id, envId: environment|get_environment.id, redirectToUrl: app.request.requesturi }) }}\">\n                                    Publish in {{ environment }}\n                                </a>\n                            {% endif %}\n                        </li>\n                    </ul>\n                </div>\n            {% endfor %}\n        {% else %}\n            {% if attribute(templatesByType, item.type)|default([])|length == 1 %}\n                {% set template = attribute(templatesByType, item.type)|first %}\n                <button class=\"json-post-button btn btn-sm btn-warning\" data-value=\"{{ template.value|json_encode|e('html_attr') }}\" data-path=\"{{ path('emsco_interface_document_create', { interface: 'json', name: item.type })|e('html_attr') }}\" data-redirect=\"{{ path('emsco_edit_revision', {revisionId: '__revisionId__' })|e('html_attr') }}\">\n                    <i class=\"fa fa-plus\"></i>\n                    {{ template.label }}\n                </button>\n            {% elseif attribute(templatesByType, item.type)|default([])|length > 1 %}\n                <div class=\"btn-group\">\n                    <button type=\"button\" class=\"btn btn-warning btn-sm dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n                        <i class=\"fa fa-plus\"></i>\n                        Create {{ item.type }}\n                        <span class=\"caret\"></span>\n                        <span class=\"sr-only\">Toggle dropdown of available templates</span>\n                    </button>\n                    <ul class=\"dropdown-menu\" role=\"menu\">\n                        {% for template in attribute(templatesByType, item.type)|default([]) %}\n                            <li>\n                                <a href=\"#\" class=\"json-post-button\" data-value=\"{{ template.value|json_encode|e('html_attr') }}\" data-path=\"{{ path('emsco_interface_document_create', { interface: 'json', name: item.type })|e('html_attr') }}\" data-redirect=\"{{ path('emsco_edit_revision', {revisionId: '__revisionId__' })|e('html_attr') }}\">\n                                    {{ template.label }}\n                                </a>\n                            </li>\n                        {% endfor %}\n                    </ul>\n                </div>\n            {% endif %}\n        {% endif %}\n        {% if item.parent is defined %}\n            <div class=\"btn-group\">\n                <button type=\"button\" class=\"btn btn-default btn-sm dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n                    <i class=\"fa fa-plus\"></i>\n                    Add\n                    <span class=\"caret\"></span>\n                    <span class=\"sr-only\">Toggle dropdown of adding entries</span>\n                </button>\n                <ul class=\"dropdown-menu\" role=\"menu\">\n                    <li>\n                        <a href=\"#\" class=\"\">\n                            <i class=\"fa fa-angle-up\"></i> Before\n                        </a>\n                    </li>\n                    <li>\n                        <a href=\"#\" class=\"\">\n                            <i class=\"fa fa-angle-down\"></i> After\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        {% endif %}\n     {% endverbatim %}\n{%  endblock %}\n\n{%  block ems_footer %}\n    <script>\n        $('.json-post-button').on('click', function(event) {\n            event.preventDefault();\n            var xhr = new XMLHttpRequest();\n            var url = $(this).data('path');\n            var redirect = $(this).data('redirect');\n            xhr.open(\"POST\", url, true);\n            xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === 4 && xhr.status === 200) {\n                    var json = JSON.parse(xhr.responseText);\n                    document.location = redirect.replace('__revisionId__', json.revision_id);\n                }\n            };\n            var data = JSON.stringify($(this).data('value'));\n            xhr.send(data);\n        });\n    </script>\n{%  endblock %}\n",
    "name": "dashboard/sitemap.twig"
}