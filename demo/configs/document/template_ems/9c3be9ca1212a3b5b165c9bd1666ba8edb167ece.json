{
    "body": "{% block template %}\n    {% set columns = [] %}\n    {% if contentType.name == 'label' %}\n        {%- set languages = {'nl': 'Dutch', 'fr': 'French'} -%}\n        {%- set selectedLanguages = app.request.query.get('l', ['nl', 'fr']) -%}\n        {% set columnKey %}{% verbatim %}<a href=\"{{ path('data.revisions', {ouuid: data.id, type: data.contentType} ) }}\">{{ data.source.key }}</a>{% endverbatim %}{% endset %}\n        {% set columns = [\n            { \"label\": \"Key\", \"template\": columnKey|format,  \"orderField\": \"key\"}\n        ] %}\n\n        {% for l, lang in languages|filter((v, k) => k in selectedLanguages) %}\n            {% set columns = columns|merge([\n                {\n                    \"label\": (lang),\n                    \"template\": \"<span class=\"~'\"'~\"{% if data.source.label_#{l} is not defined %}text-gray{% endif %}\"~'\"'~\">{{ data.source.label_#{l}|default('N/A') }}</span>\",\n                    \"orderField\": \"label_#{l}.alpha_order\"\n                }\n            ]) %}\n        {% endfor %}\n    {% elseif contentType.name == 'route' %}\n        {% set columnName %}{% verbatim %}<a href=\"{{ path('data.revisions', {ouuid: data.id, type: data.contentType} ) }}\">{{ data.source.name }}</a>{% endverbatim %}{% endset %}\n        {% set columns = [\n            {\n                \"label\": \"#\",\n                \"template\": \"{{ data.source.order|default(999) }}\",\n                \"orderField\": \"order\"\n            },\n            { \"label\": \"Name\", \"template\": columnName|format,  \"orderField\": \"name\"},\n            {\n                \"label\": \"Path\",\n                \"template\": \"\n                {% set path = attribute(data.source.config|default({})|ems_json_decode, 'path')|default('N/A') %}\n                    {% if path is iterable %}\n                        <ul>\n                            {% for l, item in path %}\n                                <li>{{ l }} : {{ item }}</li>\n                            {% endfor %}\n                        </ul>\n                    {% else %}\n                        <span class=\"~'\"'~\"{% if attribute(data.source.config|default({})|ems_json_decode, 'path') is not defined %}text-gray{% endif %}\"~'\"'~\">{{ path }}</span>\n                    {% endif %}\n                \"\n            } ] %}\n    {% elseif contentType.name in ['template', 'template_ems'] %}\n        {% set columnName %}{% verbatim %}<a href=\"{{path('data.revisions', {ouuid: data.id, type: data.contentType} ) }}\">{{ data.source.name }}</a>{% endverbatim %}{% endset %}\n        {% set columns = [ { \"label\": \"Name\", \"template\": columnName|format,  \"orderField\": \"name\"} ] %}\n    {% else %}\n        {% set columns = columns|merge([\n            {\n                \"label\": \"EMS label\",\n                \"template\": '<a href=\"' ~ \"{{path('data.revisions', {ouuid: data.id, type: data.contentType} ) }}\"~'\">' ~\"{{ data.source.label }}</a>\",\n                \"orderField\": \"label.alpha_order\"\n            }\n        ]) %}\n    {% endif %}\n\n    {% if contentType.name in ['news', 'publication', 'taxonomy'] %}\n        {% set columns = columns|merge([\n            {\n                \"label\": \"Type\",\n                \"template\": \"{{ data.source.type }}\",\n                \"orderField\": \"type\"\n            }\n        ]) %}\n    {% endif %}\n    {% set infoEnv = 'overview.legend'|i18n('en') %}\n\n    <div class=\"mb-3\">\n        <h4>Legend for Live</h4>\n        {% for info in infoEnv|ems_json_decode %}\n            <span class=\"ml-2\"><i style=\"color: {{ info.color }}\" class=\"{{ info.icon }}\"></i>  {{ info.label }}</span>\n        {% endfor %}\n    </div>\n\n    {% set columnLive %}{% verbatim %}\n    <i style=\"color: {{ docInfo.published('live') and (docInfo.aligned('live') or docInfo.revision('preview').finalizedDate == docInfo.revision('live').finalizedDate) ? infoEnv.published.color : docInfo.published('live') ? infoEnv.warning.color : infoEnv.unpublished.color }}\"\n    class=\"{{ docInfo.published('live') and (docInfo.aligned('live') or docInfo.revision('preview').finalizedDate == docInfo.revision('live').finalizedDate) ? infoEnv.published.icon : docInfo.published('live') ? infoEnv.warning.icon : infoEnv.unpublished.icon }}\"\n    title=\"{{ docInfo.published('live') and (docInfo.aligned('live') or docInfo.revision('preview').finalizedDate == docInfo.revision('live').finalizedDate) ? infoEnv.published.label : docInfo.published('live') ? infoEnv.warning.label : infoEnv.unpublished.label }}\"></i>\n{% endverbatim %}{% endset %}\n\n    {% set columns = columns|merge([\n        {\n            \"label\": \"Last Update\",\n            \"template\": '\n            <div style=\"width: 130px;\" data-toggle=\"tooltip\" data-placement=\"top\" aria-hidden=\"true\" title=\"By {{ data.source._finalized_by }}\" >\n                {{ data.source._finalization_datetime|default ? data.source._finalization_datetime|date(\"d/m/Y (H:i)\") : \"N.A.\" }}\n            </div>\n        ',\n            \"orderField\": \"_finalization_datetime\"\n        },\n        { \"label\": \"Live\", \"template\": columnLive|format },\n        {\n            \"label\": \"Action\",\n            \"template\": '\n            <div class=\"btn-group btn-group-sm\" style=\"width: 130px;\">\n              <a href=\"{{ docInfo.draft ? path(\"ems_revision_edit\", {revisionId: revisionId}) : docInfo.aligned(\"live\") ? path(\"revision.new-draft\", {type: data.contentType, ouuid: data.id }) : path(\"revision.publish_to\", {revisionId: revisionId, envId: liveId, redirectToUrl: path(\"data.customindexview\", {viewId: '~view.id~'})}) }}\" class=\"btn btn-default\" style=\"width: 100px;\">\n                {{ docInfo.draft ? \"Edit draft\" : docInfo.aligned(\"live\") ? \"Edit\" : \"Publish in live\" }}\n              </a>\n              <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n                <span class=\"caret\">\n                </span>\n                <span class=\"sr-only\">Toggle Dropdown\n                </span>\n              </button>\n              <ul class=\"dropdown-menu\" role=\"menu\">\n                <li>\n                  <a href=\"{{ path(\"data.revisions\", {ouuid: data.id, type: data.contentType} ) }}\">Revision</a>\n                </li>\n                {% if docInfo.draft %}\n                    <li><a href=\"{{ path(\"revision.publish_to\", {revisionId: revisionId, envId: previewId}) }}\">Publish in preview</a></li>\n                {% elseif not docInfo.aligned(\\'live\\') %}\n                    <li><a href=\"{{ path(\"revision.new-draft\", {type: data.contentType, ouuid: data.id }) }}\">Edit</a></li>\n                {% endif %}\n              </ul>\n            </div>\n        '\n        }\n    ]) %}\n\n    {% set must = {} %}\n    {% set filterQuery = [ {\n        \"multi_match\": {\n            \"fields\": [\n                \"live_search\",\n                \"live_search._2gram\",\n                \"live_search._3gram\"\n            ],\n            \"query\": \"%query%\",\n            \"operator\": \"and\",\n            \"type\": \"bool_prefix\"\n\n        } } ] %}\n\n    <div id=\"wrapper-overview\">\n        <div id=\"view-loading\" style=\"display: none;\"><i class=\"fa fa-cog fa-spin fa-3x fa-fw\"></i></div>\n        {% if filters is defined %}\n            {% with { 'filters' : filters, 'selections': selections } %}{{ block('filters') }}{% endwith %}\n        {% endif %}\n        {{ emsco_datatable(['preview'],[contentType.name], {\n            \"frontendOptions\": { \"pageLength\": 100, \"order\": [[(columns|length - 4), 'desc']] },\n            \"default_sort\": { \"_finalization_datetime\": \"desc\", \"_score\": \"asc\" },\n            \"empty_query\": must,\n            \"query\": { \"bool\": { \"must\": must|merge(filterQuery) } },\n            \"row_context\": \"{% set docInfo = [line.data.contentType, line.data.id]|join(':')|emsco_document_info %}{% set revisionId = line.data.id|get_revision_id(line.data.contentType) %}{% set liveId = 'live'|get_environment.id %}{% set previewId = 'preview'|get_environment.id %} {% set infoEnv = #{infoEnv} %}\",\n            \"columns\": columns\n        }) }}\n    </div>\n{% endblock %}\n\n{% block css %}\n    <style type=\"text/css\">\n        div#wrapper-overview { position: relative; }\n        div#view-loading {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            background-color: rgba(9,9,9,.1);\n            z-index: 1000;\n            font-size: 1em;\n        }\n    </style>\n{% endblock %}\n\n{% block javascript %}\n    <script type=\"text/javascript\">\n        window.addEventListener('emsReady', function () {\n            let filterForm = document.getElementById('form-filters');\n            filterForm.addEventListener('change', function () { filterForm.submit(); });\n\n            $('#DataTables_Table_0').on( 'draw.dt', function () {\n                $('[data-toggle=\"tooltip\"]').tooltip();\n            });\n        });\n\n        document.body.addEventListener('click', function (evt) {\n            let target = evt.target;\n            if (target.classList.contains('duplicate')) {\n                document.getElementById(\"view-loading\").style.display = \"flex\";\n                let f=document.createElement('form');\n                f.style.display='none';\n                document.body.appendChild(f);\n                f.method='post';\n                f.action=target.dataset.url;\n                f.submit();\n            }\n        });\n    </script>\n{% endblock %}\n",
    "name": "view/overview.twig"
}